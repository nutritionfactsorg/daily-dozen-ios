# Set minimum supported iOS version
platform :ios, '12.4'

target 'DailyDozen' do
  # Comment out the next line to *not*use* dynamic frameworks
  use_frameworks!

  # Pods for DailyDozen
  pod 'ActiveLabel', '~> 1.1.0'
  pod 'Charts', '~> 4.1.0'
  pod 'FSCalendar', '~> 2.8.4'
  pod 'RealmSwift', '~> 4.4.1'
  pod 'SimpleAnimation', '~> 0.4.2'
  
  ## https://github.com/firebase/firebase-ios-sdk
  ##
  ## Original
  ## Firebase (8.14.0)
  ## FirebaseAnalytics (8.14.0)
  ## FirebaseCore (8.14.0)
  ## FirebaseCoreDiagnostics (8.14.0)
  ## FirebaseInstallations (8.14.0)
  ## GoogleAppMeasurement (8.14.0)
  ## GoogleDataTransport (9.1.2)
  ## GoogleUtilities (7.7.0)
  ## PromisesObjC (2.1.0)
  ## nanopb (2.30908.0)
  
  #### Update
  ## Firebase 10.11.0
  ## FirebaseAnalytics 10.11.0
  ## FirebaseCore 10.11.0
  ## FirebaseCoreInternal 10.11.0
  ## FirebaseInstallations 10.11.0
  ## GoogleAppMeasurement 10.11.0
  ## GoogleUtilities 7.11.1
  ## PromisesObjC 2.2.0
  ## SwiftAlgorithms (1.0.0)
  ## nanopb 2.30909.0

  ##
  ## For Analytics WITH IDFA collection capability
  #pod 'Firebase/Analytics'
  ## For Analytics WITHOUG IDFA collection capability
  pod 'Firebase/AnalyticsWithoutAdIdSupport'
  
  
  target 'DailyDozenTests' do
    inherit! :search_paths
    # Pods for testing
  end
  
  target 'DailyDozenUITests' do
    # Pods for testing
  end
  
end
  

### Firebase issue 
### DT_TOOLCHAIN_DIR cannot be used to evaluate LIBRARY_SEARCH_PATHS, use TOOLCHAIN_DIR instead
post_install do |installer|
  ### :ADD: for Firebase issue approach 1
  #installer.aggregate_targets.each do |target|
  #  target.xcconfigs.each do |variant, xcconfig|
  #    xcconfig_path = target.client_root + target.xcconfig_relative_path(variant)
  #    IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("DT_TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
  #  end
  #end
  ###
  
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
        # Exclude building for arm64 simulator (M1 chipset).
        # Note: Revisit `EXCLUDED_ARCHS` after removing RealmSwift
        # Apple XCFrameworks are needed to support this properly, future work.
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        #config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
        
        #config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.1'
                
        #config.build_settings['ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES'] = '$(inherited)'
        
        # Toggle Mac (Designed for iPhone) and Mac (Designed for iPad) destinations.
        #config.build_settings['SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD'] = 'NO'
        #config.build_settings['SUPPORTS_MACCATALYST'] = 'NO'
        
        # other: `ARCHS` $(ARCHS_STANDARD)
        # other: `CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER` 'NO'
        # not specified 'SWIFT_VERSION'
        

        ### :ADD: for Firebase issue approach 1
        #if config.base_configuration_reference.is_a? Xcodeproj::Project::Object::PBXFileReference
        #  xcconfig_path = config.base_configuration_reference.real_path
        #  IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("DT_TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
        #end
        ###
        
        ### :ADD: for Firebase issue approach 2
        xcconfig_path = config.base_configuration_reference.real_path
        xcconfig = File.read(xcconfig_path)
        xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
        File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }
        ###
    end
  end
end
